package pages.booking;

import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import org.testng.Assert;
import java.time.Duration;

public class CancelBookingPage extends BaseBookingPage {

    private static final Logger logger = LogManager.getLogger(CancelBookingPage.class);
    private By cancelBookingButton = By.xpath("//button[normalize-space()='Hu·ª∑ ph√≤ng']");

    public CancelBookingPage(WebDriver driver) {
        super(driver); // k·∫ø th·ª´a driver v√† wait
    }

    // --- Click l·∫°i avatar sau khi login ---
    public void waitAndClickAvatarAgain() {
        try {
            logger.info("‚è≥ ƒê·ª£i 5s sau khi login ƒë·ªÉ giao di·ªán ·ªïn ƒë·ªãnh...");
            Thread.sleep(5000);

            WebElement avatar = wait.until(ExpectedConditions.elementToBeClickable(userAvatar));
            ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", avatar);
            avatar.click();

            logger.info("üü¢ ƒê√£ click l·∫°i avatar sau khi login.");
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
            logger.error("‚ùå Thread b·ªã ng·∫Øt khi sleep: {}", e.getMessage());
        } catch (Exception e) {
            logger.warn("‚ö† Kh√¥ng click ƒë∆∞·ª£c avatar sau khi login: {}", e.getMessage());
        }
    }

    // --- M·ªü ph√≤ng theo t√™n ---
    public void openRoomByName(String phong) {
        logger.info("‚û° T√¨m ph√≤ng c√≥ t√™n: {}", phong);
        By roomName = By.xpath("//p[contains(@class,'text-xl') and normalize-space()='" + phong + "']");
        clickElement(roomName); // d√πng l·∫°i t·ª´ BaseBookingPage
        logger.info("‚úÖ ƒê√£ click v√†o ph√≤ng: {}", phong);
    }

    // --- Click n√∫t Cancel booking ---
    public void clickCancelBooking() {
        logger.info("‚û° T√¨m v√† click n√∫t Hu·ª∑ ph√≤ng");

        WebDriverWait shortWait = new WebDriverWait(driver, Duration.ofSeconds(10));
        WebElement cancelBtn;

        try {
            cancelBtn = shortWait.until(ExpectedConditions.elementToBeClickable(cancelBookingButton));
        } catch (TimeoutException e) {
            String msg = "‚ùå Kh√¥ng t√¨m th·∫•y Button Hu·ª∑ ph√≤ng";
            logger.error(msg);
            Assert.fail(msg);
            return;
        }

        ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView({block:'center'});", cancelBtn);
        cancelBtn.click();
        logger.info("‚úÖ ƒê√£ click v√†o n√∫t Hu·ª∑ ph√≤ng");

        // üîÅ X√°c nh·∫≠n popup n·∫øu c√≥
        By confirmCancel = By.xpath("//button[contains(.,'Confirm') or contains(.,'X√°c nh·∫≠n')]");
        try {
            WebElement confirmBtn = wait.until(ExpectedConditions.elementToBeClickable(confirmCancel));
            confirmBtn.click();
            logger.info("‚úÖ ƒê√£ x√°c nh·∫≠n hu·ª∑ ph√≤ng");
        } catch (TimeoutException e) {
            logger.warn("‚ö† Kh√¥ng th·∫•y popup x√°c nh·∫≠n (b·ªè qua n·∫øu kh√¥ng c√≥)");
        }
    }
}

package pages.booking;

import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.ExpectedConditions;

import java.time.Duration;
import java.util.List;

public class FavoritePage extends BaseBookingPage {

    public FavoritePage(WebDriver driver) {
        super(driver);
    }

    // --- Click tr√°i tim y√™u th√≠ch ---
    public void clickFavorite(String tenPhong) {
        logger.info("üíñ Click tr√°i tim y√™u th√≠ch cho ph√≤ng '{}'", tenPhong);

        try {
            // N·∫øu c√≥ tab "Ph√≤ng y√™u th√≠ch" ho·∫∑c "ƒê√£ ƒë·∫∑t" th√¨ click
            List<WebElement> tabs = driver.findElements(
                    By.xpath("//button[contains(.,'Ph√≤ng y√™u th√≠ch') or contains(.,'ƒê√£ ƒë·∫∑t')]")
            );
            if (!tabs.isEmpty()) {
                ((JavascriptExecutor) driver).executeScript("arguments[0].click();", tabs.get(0));
                logger.info("üóÇÔ∏è ƒê√£ click tab hi·ªÉn th·ªã danh s√°ch ph√≤ng.");
                Thread.sleep(1500);
            }

            // Cu·ªôn gi·ªØa trang cho d·ªÖ th·∫•y
            ((JavascriptExecutor) driver).executeScript("window.scrollTo(0, document.body.scrollHeight/2);");
            Thread.sleep(1000);

            // --- T√¨m ph√≤ng theo ti√™u ƒë·ªÅ (trong th·∫ª h2) ---
            By phongLocator = By.xpath("//p[contains(@class,'text-xl') and normalize-space()='" + tenPhong + "']");

            WebElement phong = wait
                    .withTimeout(Duration.ofSeconds(10))
                    .until(ExpectedConditions.visibilityOfElementLocated(phongLocator));

            // --- Click icon tr√°i tim ---
            WebElement heart = phong.findElement(By.xpath(".//button[descendant::svg]"));
            ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView({block:'center'});", heart);
            ((JavascriptExecutor) driver).executeScript("arguments[0].click();", heart);

            logger.info("‚úÖ ƒê√£ click tr√°i tim y√™u th√≠ch cho '{}'", tenPhong);

        } catch (Exception e) {
            logger.error("‚ùå Kh√¥ng t√¨m th·∫•y ph√≤ng '{}' ƒë·ªÉ click y√™u th√≠ch: {}", tenPhong, e.getMessage());

            // In ra danh s√°ch ph√≤ng ƒëang hi·ªÉn th·ªã ƒë·ªÉ d·ªÖ debug
            List<WebElement> roomNames = driver.findElements(By.xpath("//h2[contains(@class,'text-xl')]"));
            for (WebElement room : roomNames) {
                logger.info("üõèÔ∏è Ph√≤ng hi·ªÉn th·ªã: '{}'", room.getText());
            }

            throw new RuntimeException("Kh√¥ng t√¨m th·∫•y ph√≤ng: " + tenPhong, e);
        }
    }

    // --- Ki·ªÉm tra tr√°i tim c√≥ ƒëang b·∫≠t (ƒë·ªè) kh√¥ng ---
    public boolean isFavoriteActive(String tenPhong) {
        logger.info("üîç Ki·ªÉm tra tr·∫°ng th√°i tr√°i tim c·ªßa ph√≤ng '{}'", tenPhong);

        try {
            By heartLocator = By.xpath(
                    "//h2[contains(translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'), '"
                            + tenPhong.toLowerCase() + "')]"
                            + "/ancestor::div[contains(@class,'relative')]"
                            + "//svg[contains(@fill,'red') or contains(@class,'text-red')]"
            );

            WebElement heart = wait
                    .withTimeout(Duration.ofSeconds(8))
                    .until(ExpectedConditions.visibilityOfElementLocated(heartLocator));

            boolean active = heart.isDisplayed();
            logger.info("‚ù§Ô∏è Tr·∫°ng th√°i y√™u th√≠ch: {}", active ? "B·∫¨T (ƒë·ªè)" : "T·∫ÆT");
            return active;

        } catch (TimeoutException e) {
            logger.warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y icon tr√°i tim ƒë·ªè cho ph√≤ng '{}'", tenPhong);
            return false;
        }
    }
}
